Git repo contains a signature.txt file.
Check the signature against the students “.vdi” file.
Clone VM || create a snapshot && open VM.

How does a virtual machine work and what is its purpose?
	# A VM is a virtual emulation of a physical computer,
	which allows multiple OS to run at the same time.
	Overall, virtual machines offer flexibility, resource optimization,
	security, and cost-efficiency.
		Server Consolidation:
			Virtualization allows multiple virtual servers to run on a single physical server.
		Desktop Virtualization:
			 Users can access virtual desktops running on centralized servers from any device.
		Isolation and Security:
			VMs provide strong isolation between different operating systems.
		Development and Testing:
			VMs are used for software development, testing, and deployment.
			Providing a controlled and reproducible environment for developers,
			allowing test software on different OS and configs without the need for more hardware.
		Legacy System Support:
			VMs provide and easy way to gurantee backwards compatibility.
		Recovery:
			VMs provide an easy and cheap way to keep backups.

The basic differences between CentOS and Debian?
	#  Main differences would be:
	package management systems, release cycles, target audiences.
	- CentOS
		focuses on stability and long-term support.
		favored in enterprise environments.
		uses YUM or DNF package manager.
		primarily targets server environments.
		no native desktop environment.
	- Debian
		has a longer history and a broader user base
		more frequent release cycle and offers 3 possible branches;
		Stable, Testing, Unstable.
		uses APT or APTITUDE package manager.
		Offers a wider choice of repositories and packages.
		Natively supports desktop environments: GNOME, KDE, Xfce.


Why debian?
	#
		more offer of packages/repositories.
		larger community, easier support.
		flexible system configuration.
		desktop enviroment options.
		easier to learn.

What is the difference between aptitude, apt?
	#
		Aptitude
			advanced user interface.
			includes features like package search, package categorization, and interactive dependency resolution.
			user-friendly for managing packages and resolving complex dependency scenarios.
			is a frontend for APT.
		APT
			command-line interface.
			basic options for handling packages and dependencies.
			focused on essential package operations.

What is APPArmor?
	#  APPArmor is a kernel security module that confines individual applications,
	allowing admins to define access controls and restrictions on their behavior.
	It reduces risks associated with application vulnerabilities, malware, and unauthorized access.
	Works in complain or enforce mode. Enforce mode restricts actions, Complain mode registers actions.

Connect to VM as a created user (which isn’t a root).
	Ensure the password follows the required policy (2 days min, 7, 30 days max).
		sudo chage -l username

check OS.
	lsb_release -a || cat /etc/os-release

Check UFW status.
	sudo ufw status

check SSH service.
	sudo systemctl status ssh

Check user name.
	must be user 42 login
	must belong to groups sudo and user42
		getent group sudo
		getent group user42

Add new user for evaluator.
	sudo adduser new_username

Explain how to implement the password policy.
	#
		install libpam-pwquality.
			method 1
				edit /etc/security/pwquality.conf
			method 2
				edit /etc/pam.d/common-password
		# Number of characters in the new password that must not be present in the old one.
			difok = 7
		# The minimum acceptable size for the new password.
		# (plus one if credits are not disabled which is the default)
			minlen = 10
		# The maximum credit for having digits in the new password.
		# If less than 0 it is the minimun number of digits in the new password.
			dcredit = -1
		# The maximum credit for having uppercase characters in the new password.
		# If less than 0 it is the minimun number of uppercase characters in the new password.
			ucredit = -1
		# The maximum credit for having lowercase characters in the new password.
		# If less than 0 it is the minimun number of uppercase characters in the new password.
			lcredit = -1
		# The maximum number of allowed consecutive same characters in the new password.
		# The check is disabled if the value is 0.
			maxrepeat = 3
		# Whether to check it it contains the user name in some form.
		# The check is disabled if the value is 0.
			usercheck = 1 / reject_username
		# Prompt user at most N times before returning with error. The default is 1.
			retry = 3
		# Enforces pwquality checks on the root user password.
		# Enabled if the option is present.
			enforce_for_root

Add evaluator user to group.
	sudo groupadd evaluating
	sudo usermod -aG evaluating your_new_username
	getent group evaluating

Elaborate on advantages/disadvantages of the password policy.
	#
		advantages
			crucial for maintaining strong security practices.
				reduces possibility of password based attacks.
				establishes a sense of responsibility and accountability among users.
				compliance with international standarts.
					(complying with these standarts if mandatory for some companies).
		disadvantages
			user convenience.
				strong password policies may lead to users having many passwords,
				forgetting them and requiring constant resets may be an issue.


Check the hostname of the machine is correctly formatted (user@login42).
	hostnamectl

Modify hostname.
	sudo hostnamectl set-hostname new_hostname
	sudo reboot (changes must be present after reboot).

Restore original hostname.
	sudo hostnamectl set-hostname new_hostname
	sudo reboot (changes must be present after reboot).

Display VM partion table.
	lsblk

Elaborate on partition table, primary, logical, encrypted, what is LVM and how it works.
	#

Check is sudo is installed.
	dpkg -l | grep sudo

Assign new user to sudo group.
	sudo usermod -aG sudo username

Display and explain sudo rules.
	sudo visudo
	#

Verify /var/log/sudo/sudo.log
	check contents of file for sudo command history
	use sudo command, check if file was updated


Check if UFW is installed and working.
	sudo ufw status numbered

Elaborate on what is UFW and why is helpful to use it.
	#
	list active rules for ufw
		check for port 4242
		add new rule
		check new rule was added
		delete rule

Elaborate on SSH service, what is it, what is it used for.
	#secure shell, allows 2 computers to securely talk to each other
		check service is installed and operational using port 4242
			sudo service ssh status
		connect to vm with host terminal using evaluators username
			ssh evaluator@127.0.0.1 -p 4242
		make sure you cannot use SSH with the “root” user as stated in the subject.
			ssh login42@127.0.0.1 -p 4242 / ssh root@127.0.0.1 -p 4242

Ask the student how their script works and see their code for it
	cd /usr/local/bin && vim monitoring.sh

What is cron?
	How does the script run every 10 minutes from when the server starts?
		use sleep.sh?

	Check if script runs with dynamic values
		sudo crontab -u root -e (***change 10 value to 1***)

	Stop/Start the script from running on startup.
		sudo cronstop
		sudo cronstart

	At startup, check if the script still exists in the same place,
	The rights have remained unchanged and that it has not been modified.
		sudo reboot
		sudo crontab -u root -e

Script notes.
	Architecture
		uname -srvmo
	Physical CPUs
		grep 'physical id' /proc/cpuinfo | uniq | wc -l
	Virtual CPUs
		grep processor /proc/cpuinfo | uniq | wc -l
	Memory Usage
		free -h | grep Mem | awk '{print $2}'
		free -h | grep Mem | awk '{print $3}'
		free -k | grep Mem | awk '{printf("%.2f%%"), $3 / $2 * 100}'
	Disk Usage
		df -h --total | grep total | awk '{print $2}'
		df -h --total | grep total | awk '{print $3}'
		df -k --total | grep total | awk '{print $5}'
	CPU Load
		top -bn1 | grep '^%Cpu' | xargs | awk '{printf("%.1f%%"), $2 + $4}'
	Last Boot
		who -b | awk '{print($3 " " $4)}'
	LVM
		if [ $(lsblk | grep lvm | wc -l) -eq 0 ]; then echo no; else echo yes; fi
	TCP Connections
		grep TCP /proc/net/sockstat | awk '{print $3}'
	Users logged
		who | wc -l
	Network
		hostname -I | awk '{print $1}'
		ip link show | grep link/ether | awk '{print $2}'
	Sudo
		grep COMMAND /var/log/sudo/sudo.log | wc -l
